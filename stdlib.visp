(define not
  (lambda (val)
    (if val #f #t)))

(define or
  (lambda (a b)
    (if a #t
      (if b #t #f))))

(define and
  (lambda (a b)
    (if a
        (if b #t #f)
      #f)))

(define xor
  (lambda (a b)
    (if a
        (if b #f #t)
      (if b #t #f))))

(define >=
  (lambda (a b)
    (if (or (eq a b) (> a b))
        #t
      #f)))

(define <=
  (lambda (a b)
    (if (or (eq a b) (< a b))
        #t
      #f)))

(define sum
  (lambda (list)
    (if (empty list)
        0
      (+ (head list) (sum (tail list))))))
